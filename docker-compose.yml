services:
  # web:
  #   build:
  #     context: ./web
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./web/.env
  #   container_name: web
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - local-network
  #   depends_on:
  #     - common-api
  #     - database

  # common-api:
  #   build:
  #     context: ./common-api
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./common-api/.env
  #   container_name: common-api
  #   ports:
  #     - "3001:3001"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3001/healthcheck"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 5s
  #   networks:
  #     - local-network
  #   depends_on:
  #     - database
  #     - cache


  facebook-page-api:
    build:
      context: ./facebook-page-api
      dockerfile: Dockerfile
    env_file:
      - ./facebook-page-api/.env
    container_name: facebook-page-api
    ports:
      - "3002:3002"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://facebook-page-api:3002/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - local-network
    depends_on:
      - queue

  facebook-post-worker:
    build:
      context: ./facebook-post-worker
      dockerfile: Dockerfile
    env_file:
      - ./facebook-post-worker/.env
    container_name: facebook-post-worker
    ports:
      - "3003:3003"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://facebook-post-worker:3003/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - local-network
    depends_on:
      - database
      - queue

  facebook-comment-worker:
    build:
      context: ./facebook-comment-worker
      dockerfile: Dockerfile
    env_file:
      - ./facebook-comment-worker/.env
    container_name: facebook-comment-worker
    ports:
      - "3004:3004"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://facebook-comment-worker:3004/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - local-network
    depends_on:
      - database
      - queue

  facebook-inbox-worker:
    build:
      context: ./facebook-inbox-worker
      dockerfile: Dockerfile
    env_file:
      - ./facebook-inbox-worker/.env
    container_name: facebook-inbox-worker
    ports:
      - "3005:3005"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://facebook-inbox-worker:3005/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - local-network
    depends_on:
      - database
      - queue

  database:
    image: postgres:15.8
    container_name: database
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./database/postgres/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/
    restart: unless-stopped
    networks:
      - local-network

  queue:
    image: rabbitmq:3.12-management
    container_name: queue
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - queue_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - local-network

  cache:
    image: redis:latest
    container_name: cache
    ports:
      - "6379:6379"
    volumes:
      - cache_data:/data
    restart: unless-stopped
    networks:
      - local-network

networks:
  local-network:
    driver: bridge

volumes:
  database_data:
  queue_data:
  cache_data:
# Development Dockerfile
FROM python:3.12-slim AS development

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        gcc \
        python3-dev \
        curl \
        git \
        vim \
        htop \
        procps \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==1.8.3

# Configure Poetry
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set work directory
WORKDIR /app

# Copy Poetry files
COPY pyproject.toml poetry.lock* ./

# Install dependencies including dev dependencies
RUN python -m venv /app/.venv \
    && . /app/.venv/bin/activate \
    && poetry install --no-root \
    && rm -rf $POETRY_CACHE_DIR

# Make sure we can use the virtual environment
ENV PATH="/app/.venv/bin:$PATH"

# Copy application code
COPY --chown=appuser:appuser . .

# Create directories
RUN mkdir -p /app/logs /app/uploads \
    && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Set default values for development
ENV HOST=0.0.0.0 \
    PORT=8000 \
    WORKERS=1 \
    DEBUG=True \
    UPLOAD_DIR=/app/uploads \
    MAX_FILE_SIZE=10485760 \
    ALLOWED_EXTENSIONS="jpg,jpeg,png,gif,pdf,doc,docx" \
    INTERNAL_WEBHOOK_IPS="127.0.0.1,10.0.0.1"

# Expose the port
EXPOSE ${PORT}

# Development command with hot reload
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--reload-dir", "/app/app"]
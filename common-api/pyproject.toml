[tool.ruff]
line-length = 88
target-version = "py312"
exclude = ["venv", "migrations", "__pycache__", ".git", ".pytest_cache", "build", "dist"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "RUF",  # ruff-specific rules
]
ignore = [
    "B008",   # Ignore mutable default argument for FastAPI Depends()
    "N806",   # Variable name should be lowercase (for SQLAlchemy models)
    "N803",   # Argument name should be lowercase (for SQLAlchemy)
    "RUF012", # Mutable class attributes should be annotated
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["app", "tests"]
force-single-line = false
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:pydantic.*",
    "ignore::DeprecationWarning:passlib.*",
    "ignore:.*crypt.*:DeprecationWarning",
    "ignore:.*class-based.*config.*:DeprecationWarning",
    "ignore:.*datetime.datetime.utcnow.*:DeprecationWarning:jose.*",
    "ignore:.*utcnow.*:DeprecationWarning",
]
pythonpath = "."
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "-v",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
============================= test session starts ==============================
platform darwin -- Python 3.12.3, pytest-8.4.1, pluggy-1.6.0 -- /Users/piyawatkunama/python/vrich/venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/piyawatkunama/vrich-project/common-api
configfile: pyproject.toml
plugins: asyncio-0.24.0, anyio-4.9.0, xdist-3.8.0, cov-6.2.1, mock-3.14.1, Faker-33.3.1
asyncio: mode=Mode.AUTO, default_loop_scope=None
collecting ... collected 103 items

common-api/tests/unit/test_campaign.py::test_pagination_campaigns PASSED [  0%]
common-api/tests/unit/test_campaigns_notifications.py::test_create_campaign_notification PASSED [  1%]
common-api/tests/unit/test_campaigns_notifications.py::test_get_campaign_notification FAILED [  2%]
common-api/tests/unit/test_campaigns_notifications.py::test_update_campaign_notification PASSED [  3%]
common-api/tests/unit/test_campaigns_notifications.py::test_delete_campaign_notification PASSED [  4%]
common-api/tests/unit/test_campaigns_notifications.py::test_pagination_campaign_notifications PASSED [  5%]
common-api/tests/unit/test_campaigns_products.py::test_create_campaign_product PASSED [  6%]
common-api/tests/unit/test_campaigns_products.py::test_get_campaign_product FAILED [  7%]
common-api/tests/unit/test_campaigns_products.py::test_update_campaign_product PASSED [  8%]
common-api/tests/unit/test_campaigns_products.py::test_delete_campaign_product PASSED [  9%]
common-api/tests/unit/test_campaigns_products.py::test_pagination_campaign_products PASSED [ 10%]
common-api/tests/unit/test_facebook_comment.py::test_create_facebook_comment PASSED [ 11%]
common-api/tests/unit/test_facebook_comment.py::test_get_by_comment_id PASSED [ 12%]
common-api/tests/unit/test_facebook_comment.py::test_update_facebook_comment PASSED [ 13%]
common-api/tests/unit/test_facebook_comment.py::test_unique_comment_id PASSED [ 14%]
common-api/tests/unit/test_facebook_comment.py::test_foreign_key_profile_id PASSED [ 15%]
common-api/tests/unit/test_facebook_comment.py::test_foreign_key_post_id PASSED [ 16%]
common-api/tests/unit/test_facebook_comment.py::test_pagination_limit_offset PASSED [ 17%]
common-api/tests/unit/test_facebook_comment.py::test_pagination_search PASSED [ 18%]
common-api/tests/unit/test_facebook_inbox.py::test_create_facebook_inbox FAILED [ 19%]
common-api/tests/unit/test_facebook_inbox.py::test_create_multiple_facebook_inboxes FAILED [ 20%]
common-api/tests/unit/test_facebook_inbox.py::test_create_facebook_inbox_with_same_messenger_id FAILED [ 21%]
common-api/tests/unit/test_facebook_inbox.py::test_get_facebook_inbox_by_id FAILED [ 22%]
common-api/tests/unit/test_facebook_inbox.py::test_pagination_builder_with_facebook_inbox FAILED [ 23%]
common-api/tests/unit/test_facebook_inbox.py::test_pagination_builder_with_facebook_inbox_filtered FAILED [ 24%]
common-api/tests/unit/test_facebook_inbox.py::test_update_facebook_inbox FAILED [ 25%]
common-api/tests/unit/test_facebook_inbox.py::test_unique_facebook_inbox FAILED [ 26%]
common-api/tests/unit/test_facebook_inbox.py::test_create_facebook_inbox_repo FAILED [ 27%]
common-api/tests/unit/test_facebook_inbox.py::test_get_by_messenger_id FAILED [ 28%]
common-api/tests/unit/test_facebook_inbox.py::test_update_facebook_inbox_repo FAILED [ 29%]
common-api/tests/unit/test_facebook_post.py::test_create_facebook_post PASSED [ 30%]
common-api/tests/unit/test_facebook_post.py::test_get_by_post_id PASSED  [ 31%]
common-api/tests/unit/test_facebook_post.py::test_update_facebook_post PASSED [ 32%]
common-api/tests/unit/test_facebook_post.py::test_unique_facebook_post PASSED [ 33%]
common-api/tests/unit/test_facebook_post.py::test_foreign_key_profile_id_facebook_post PASSED [ 33%]
common-api/tests/unit/test_facebook_post.py::test_pagination_limit_offset PASSED [ 34%]
common-api/tests/unit/test_facebook_post.py::test_pagination_ordering PASSED [ 35%]
common-api/tests/unit/test_facebook_post.py::test_pagination_search PASSED [ 36%]
common-api/tests/unit/test_facebook_profile.py::test_create_facebook_profile PASSED [ 37%]
common-api/tests/unit/test_facebook_profile.py::test_get_by_facebook_id PASSED [ 38%]
common-api/tests/unit/test_facebook_profile.py::test_update_facebook_profile PASSED [ 39%]
common-api/tests/unit/test_facebook_profile.py::test_unique_facebook_profile PASSED [ 40%]
common-api/tests/unit/test_facebook_profile.py::test_pagination_limit_offset PASSED [ 41%]
common-api/tests/unit/test_facebook_profile.py::test_pagination_ordering PASSED [ 42%]
common-api/tests/unit/test_facebook_profile.py::test_pagination_search PASSED [ 43%]
common-api/tests/unit/test_orders.py::test_create_order PASSED           [ 44%]
common-api/tests/unit/test_orders.py::test_get_order FAILED              [ 45%]
common-api/tests/unit/test_orders.py::test_update_order PASSED           [ 46%]
common-api/tests/unit/test_orders.py::test_delete_order PASSED           [ 47%]
common-api/tests/unit/test_orders_products.py::test_create_order_product PASSED [ 48%]
common-api/tests/unit/test_orders_products.py::test_get_order_product FAILED [ 49%]
common-api/tests/unit/test_orders_products.py::test_update_order_product PASSED [ 50%]
common-api/tests/unit/test_orders_products.py::test_delete_order_product PASSED [ 51%]
common-api/tests/unit/test_pagination.py::test_pagination_filtering PASSED [ 52%]
common-api/tests/unit/test_pagination.py::test_pagination_until PASSED   [ 53%]
common-api/tests/unit/test_pagination.py::test_pagination_limit_offset PASSED [ 54%]
common-api/tests/unit/test_pagination.py::test_pagination_ordering PASSED [ 55%]
common-api/tests/unit/test_pagination.py::test_pagination_search PASSED  [ 56%]
common-api/tests/unit/test_pagination.py::test_pagination_search_by_value PASSED [ 57%]
common-api/tests/unit/test_pagination.py::test_pagination_total_and_docs PASSED [ 58%]
common-api/tests/unit/test_pagination.py::test_pagination_all_params PASSED [ 59%]
common-api/tests/unit/test_pagination.py::test_pagination_since PASSED   [ 60%]
common-api/tests/unit/test_pagination.py::test_pagination_limit PASSED   [ 61%]
common-api/tests/unit/test_pagination.py::test_pagination_offset PASSED  [ 62%]
common-api/tests/unit/test_pagination.py::test_pagination_order PASSED   [ 63%]
common-api/tests/unit/test_pagination.py::test_pagination_order_by PASSED [ 64%]
common-api/tests/unit/test_pagination.py::test_pagination_search_by PASSED [ 65%]
common-api/tests/unit/test_pagination.py::test_pagination_since_and_limit PASSED [ 66%]
common-api/tests/unit/test_pagination.py::test_pagination_search_and_order PASSED [ 66%]
common-api/tests/unit/test_pagination.py::test_pagination_offset_and_search PASSED [ 67%]
common-api/tests/unit/test_payments.py::test_create_payment PASSED       [ 68%]
common-api/tests/unit/test_payments.py::test_get_payment FAILED          [ 69%]
common-api/tests/unit/test_payments.py::test_update_payment PASSED       [ 70%]
common-api/tests/unit/test_payments.py::test_delete_payment PASSED       [ 71%]
common-api/tests/unit/test_payments.py::test_pagination_payments PASSED  [ 72%]
common-api/tests/unit/test_products.py::test_create_product PASSED       [ 73%]
common-api/tests/unit/test_products.py::test_get_product FAILED          [ 74%]
common-api/tests/unit/test_products.py::test_update_product PASSED       [ 75%]
common-api/tests/unit/test_products.py::test_delete_product PASSED       [ 76%]
common-api/tests/unit/test_products.py::test_pagination_products PASSED  [ 77%]
common-api/tests/unit/test_profiles_contacts.py::test_create_profile_contact PASSED [ 78%]
common-api/tests/unit/test_profiles_contacts.py::test_get_profile_contact PASSED [ 79%]
common-api/tests/unit/test_profiles_contacts.py::test_update_profile_contact PASSED [ 80%]
common-api/tests/unit/test_profiles_contacts.py::test_delete_profile_contact PASSED [ 81%]
common-api/tests/unit/test_profiles_contacts.py::test_pagination_profile_contacts PASSED [ 82%]
common-api/tests/unit/test_redis_webhooks.py::test_store_webhook_data PASSED [ 83%]
common-api/tests/unit/test_redis_webhooks.py::test_get_webhook_data PASSED [ 84%]
common-api/tests/unit/test_redis_webhooks.py::test_get_recent_webhook_data PASSED [ 85%]
common-api/tests/unit/test_redis_webhooks.py::test_clear_webhook_data PASSED [ 86%]
common-api/tests/unit/test_redis_webhooks.py::test_clear_all_webhook_data PASSED [ 87%]
common-api/tests/unit/test_redis_webhooks.py::test_redis_connection_failure PASSED [ 88%]
common-api/tests/unit/test_redis_webhooks.py::test_store_webhook_data_with_existing_items PASSED [ 89%]
common-api/tests/unit/test_users.py::test_create_user_public PASSED      [ 90%]
common-api/tests/unit/test_users.py::test_create_user_unauthorized PASSED [ 91%]
common-api/tests/unit/test_users.py::test_read_users_authenticated PASSED [ 92%]
common-api/tests/unit/test_users.py::test_read_users_unauthorized PASSED [ 93%]
common-api/tests/unit/test_users.py::test_get_current_user PASSED        [ 94%]
common-api/tests/unit/test_users.py::test_update_user_profile PASSED     [ 95%]
common-api/tests/unit/test_users.py::test_login_user PASSED              [ 96%]
common-api/tests/unit/test_users.py::test_login_invalid_credentials PASSED [ 97%]
common-api/tests/unit/test_users.py::test_health_check PASSED            [ 98%]
common-api/tests/unit/test_users.py::test_create_user_validation_errors PASSED [ 99%]
common-api/tests/unit/test_users.py::test_duplicate_user_creation PASSED [100%]
ERROR: Coverage failure: total of 78 is less than fail-under=80


=================================== FAILURES ===================================
________________________ test_get_campaign_notification ________________________

db = <sqlalchemy.orm.session.Session object at 0x1065c9760>
campaign_notification_data = {'campaign_id': UUID('b0e76401-22b6-40ac-aae2-c1817c510ee9'), 'message': {'text': 'Test notification'}, 'order_id': UUID('ef77d8b0-45d0-46ba-a416-12d92ac1a072'), 'profile_id': UUID('e5bd4a66-499d-4577-8569-4bb4785f76c2'), ...}

    def test_get_campaign_notification(db, campaign_notification_data):
        created = campaign_notification_repo.create(
            db, obj_in=CampaignNotificationCreate(**campaign_notification_data)
        )
        found = (
            db.query(CampaignNotification)
            .filter(CampaignNotification.id == created.id)
            .first()
        )
>       assert found is not None
E       assert None is not None

common-api/tests/unit/test_campaigns_notifications.py:83: AssertionError
__________________________ test_get_campaign_product ___________________________

db = <sqlalchemy.orm.session.Session object at 0x106623da0>

    def test_get_campaign_product(db):
        campaign_product = create_campaign_product(db)
        found = (
            db.query(CampaignProduct)
            .filter(CampaignProduct.id == campaign_product.id)
            .first()
        )
>       assert found is not None
E       assert None is not None

common-api/tests/unit/test_campaigns_products.py:88: AssertionError
__________________________ test_create_facebook_inbox __________________________

db = <sqlalchemy.orm.session.Session object at 0x106620080>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x1066bb7d0>

    def test_create_facebook_inbox(db: Session, profile):
        """Test creating a facebook inbox."""
        inbox_in = FacebookInboxCreate(
            profile_id=profile.id,
            messenger_id="test_messenger_id",
            message="Test message",
            type="text",
            link=None,
            published_at=profile.created_at,
        )
>       inbox = facebook_inbox_repo.create(db, obj_in=inbox_in)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

common-api/tests/unit/test_facebook_inbox.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x106620080>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 4b917c2e-aa5e-4536-ba06-a37321eebebd <class 'uuid.UUID'>
____________________ test_create_multiple_facebook_inboxes _____________________

db = <sqlalchemy.orm.session.Session object at 0x106705820>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x106705d00>

    def test_create_multiple_facebook_inboxes(db: Session, profile):
        """Test creating multiple facebook inboxes."""
        inbox_in1 = FacebookInboxCreate(
            profile_id=profile.id,
            messenger_id="test_messenger_id_1",
            message="Test message 1",
            type="text",
            link=None,
            published_at=profile.created_at,
        )
        inbox_in2 = FacebookInboxCreate(
            profile_id=profile.id,
            messenger_id="test_messenger_id_2",
            message="Test message 2",
            type="text",
            link=None,
            published_at=profile.created_at,
        )
>       facebook_inbox_repo.create(db, obj_in=inbox_in1)

common-api/tests/unit/test_facebook_inbox.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x106705820>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 8082bbd9-3fcf-4f8d-9f63-d5bb25770475 <class 'uuid.UUID'>
______________ test_create_facebook_inbox_with_same_messenger_id _______________

db = <sqlalchemy.orm.session.Session object at 0x1067062d0>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x1067068a0>

    def test_create_facebook_inbox_with_same_messenger_id(db: Session, profile):
        """Test creating facebook inbox with duplicate messenger_id."""
        inbox_in = FacebookInboxCreate(
            profile_id=profile.id,
            messenger_id="test_messenger_id",
            message="Test message",
            type="text",
            link=None,
            published_at=profile.created_at,
        )
>       facebook_inbox_repo.create(db, obj_in=inbox_in)

common-api/tests/unit/test_facebook_inbox.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x1067062d0>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 37e15eb6-1eab-4de4-aae3-4390afbd0b74 <class 'uuid.UUID'>
________________________ test_get_facebook_inbox_by_id _________________________

db = <sqlalchemy.orm.session.Session object at 0x106707080>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x106707650>

    def test_get_facebook_inbox_by_id(db: Session, profile):
        """Test getting facebook inbox by id."""
        inbox_in = FacebookInboxCreate(
            profile_id=profile.id,
            messenger_id="test_messenger_id",
            message="Test message",
            type="text",
            link=None,
            published_at=profile.created_at,
        )
>       created_inbox = facebook_inbox_repo.create(db, obj_in=inbox_in)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

common-api/tests/unit/test_facebook_inbox.py:94: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x106707080>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 37773093-4561-4e94-916f-996c283f9530 <class 'uuid.UUID'>
_________________ test_pagination_builder_with_facebook_inbox __________________

db = <sqlalchemy.orm.session.Session object at 0x106707920>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x106707ad0>

    def test_pagination_builder_with_facebook_inbox(db: Session, profile):
        """Test pagination builder with facebook inbox."""
        # Create test data
        for i in range(10):
            inbox_in = FacebookInboxCreate(
                profile_id=profile.id,
                messenger_id=f"test_messenger_id_{i}",
                message=f"Test message {i}",
                type="text",
                link=None,
                published_at=profile.created_at,
            )
>           facebook_inbox_repo.create(db, obj_in=inbox_in)

common-api/tests/unit/test_facebook_inbox.py:114: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x106707920>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 5eee95e6-dfae-43a0-8ad2-159dc70a6d5b <class 'uuid.UUID'>
_____________ test_pagination_builder_with_facebook_inbox_filtered _____________

db = <sqlalchemy.orm.session.Session object at 0x1067707a0>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x106770da0>

    def test_pagination_builder_with_facebook_inbox_filtered(db: Session, profile):
        """Test pagination builder with facebook inbox filtered by profile."""
        # Create test data
        for i in range(10):
            inbox_in = FacebookInboxCreate(
                profile_id=profile.id,
                messenger_id=f"test_messenger_id_{i}",
                message=f"Test message {i}",
                type="text",
                link=None,
                published_at=profile.created_at,
            )
>           facebook_inbox_repo.create(db, obj_in=inbox_in)

common-api/tests/unit/test_facebook_inbox.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x1067707a0>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 928107c7-dd22-4495-a56f-0b05f9a10bc6 <class 'uuid.UUID'>
__________________________ test_update_facebook_inbox __________________________

db = <sqlalchemy.orm.session.Session object at 0x106771400>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x106771a90>

    def test_update_facebook_inbox(db: Session, profile):
        """Test updating facebook inbox."""
        inbox_in = FacebookInboxCreate(
            profile_id=profile.id,
            messenger_id="test_messenger_id",
            message="Test message",
            type="text",
            link=None,
            published_at=profile.created_at,
        )
>       created_inbox = facebook_inbox_repo.create(db, obj_in=inbox_in)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

common-api/tests/unit/test_facebook_inbox.py:155: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x106771400>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 556ba8ba-7ad9-427a-bc90-498f37028007 <class 'uuid.UUID'>
__________________________ test_unique_facebook_inbox __________________________

db = <sqlalchemy.orm.session.Session object at 0x1067722d0>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x1067728a0>

    def test_unique_facebook_inbox(db: Session, profile):
        """Test unique constraint on messenger_id."""
        inbox_in = FacebookInboxCreate(
            profile_id=profile.id,
            messenger_id="test_messenger_id",
            message="Test message",
            type="text",
            link=None,
            published_at=profile.created_at,
        )
>       facebook_inbox_repo.create(db, obj_in=inbox_in)

common-api/tests/unit/test_facebook_inbox.py:173: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x1067722d0>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: 3cca8988-1662-4d80-8622-ac9d818b7ad0 <class 'uuid.UUID'>
_______________________ test_create_facebook_inbox_repo ________________________

db = <sqlalchemy.orm.session.Session object at 0x106773350>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x106773830>
facebook_inbox_data = {'link': None, 'message': 'Test message', 'messenger_id': 'test_messenger_id', 'profile_id': UUID('dc2f6848-0b90-40f6-ba73-a7598dbd788b'), ...}

    def test_create_facebook_inbox_repo(db, profile, facebook_inbox_data):
>       inbox = facebook_inbox_repo.create(db, FacebookInboxCreate(**facebook_inbox_data))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

common-api/tests/unit/test_facebook_inbox.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x106773350>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: dc2f6848-0b90-40f6-ba73-a7598dbd788b <class 'uuid.UUID'>
___________________________ test_get_by_messenger_id ___________________________

db = <sqlalchemy.orm.session.Session object at 0x10675da00>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x10675c4a0>
facebook_inbox_data = {'link': None, 'message': 'Test message', 'messenger_id': 'test_messenger_id', 'profile_id': UUID('da702803-08d2-458b-8239-8ccd197d5a05'), ...}

    def test_get_by_messenger_id(db, profile, facebook_inbox_data):
>       created = facebook_inbox_repo.create(db, FacebookInboxCreate(**facebook_inbox_data))
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

common-api/tests/unit/test_facebook_inbox.py:198: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x10675da00>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: da702803-08d2-458b-8239-8ccd197d5a05 <class 'uuid.UUID'>
_______________________ test_update_facebook_inbox_repo ________________________

db = <sqlalchemy.orm.session.Session object at 0x10675ca70>
profile = <app.db.models.facebook_profile.FacebookProfile object at 0x10675d0a0>
facebook_inbox_data = {'link': None, 'message': 'Test message', 'messenger_id': 'test_messenger_id', 'profile_id': UUID('aab99cc8-3933-4c5d-acd8-79f3f4e93a86'), ...}

    def test_update_facebook_inbox_repo(db, profile, facebook_inbox_data):
>       created = facebook_inbox_repo.create(db, FacebookInboxCreate(**facebook_inbox_data))
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

common-api/tests/unit/test_facebook_inbox.py:205: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
common-api/app/db/repositories/facebook_inbox/repo.py:17: in create
    return create_facebook_messenger(db, obj_in=obj_in)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <sqlalchemy.orm.session.Session object at 0x10675ca70>

    def create_facebook_messenger(
        db: Session, *, obj_in: FacebookInboxCreate
    ) -> FacebookInbox:
        # Check if profile exists
        profile = (
            db.query(FacebookProfile)
            .filter(FacebookProfile.id == obj_in.profile_id)
            .first()
        )
        if not profile:
>           raise ValueError(ERR_FACEBOOK_INBOX_PROFILE_NOT_FOUND)
E           ValueError: Referenced FacebookProfile does not exist.

common-api/app/db/repositories/facebook_inbox/create.py:22: ValueError
---------------------------- Captured stdout setup -----------------------------
Profile ID: aab99cc8-3933-4c5d-acd8-79f3f4e93a86 <class 'uuid.UUID'>
________________________________ test_get_order ________________________________

db = <sqlalchemy.orm.session.Session object at 0x106704c80>

    def test_get_order(db):
        order = create_order(db)
        found = db.query(Order).filter(Order.id == order.id).first()
>       assert found is not None
E       assert None is not None

common-api/tests/unit/test_orders.py:83: AssertionError
____________________________ test_get_order_product ____________________________

db = <sqlalchemy.orm.session.Session object at 0x10675f860>

    def test_get_order_product(db):
        order_product = create_order_product(db)
        found = db.query(OrderProduct).filter(OrderProduct.id == order_product.id).first()
>       assert found is not None
E       assert None is not None

common-api/tests/unit/test_orders_products.py:112: AssertionError
_______________________________ test_get_payment _______________________________

db = <sqlalchemy.orm.session.Session object at 0x10690e5d0>

    def test_get_payment(db):
        payment = create_payment(db)
        found = db.query(Payment).filter(Payment.id == payment.id).first()
>       assert found is not None
E       assert None is not None

common-api/tests/unit/test_payments.py:134: AssertionError
_______________________________ test_get_product _______________________________

db = <sqlalchemy.orm.session.Session object at 0x106952150>

    def test_get_product(db):
        data = product_data()
        created = product_repo.create(db, obj_in=ProductCreate(**data))
        found = db.query(Product).filter(Product.id == created.id).first()
>       assert found is not None
E       assert None is not None

common-api/tests/unit/test_products.py:32: AssertionError
================================ tests coverage ================================
_______________ coverage: platform darwin, python 3.12.3-final-0 _______________

Name                                                                 Stmts   Miss  Cover   Missing
--------------------------------------------------------------------------------------------------
common-api/app/api/dependencies/database.py                             27      6    78%   26-27, 33, 41-42, 47
common-api/app/api/dependencies/pagination.py                          102     25    75%   51-54, 79-88, 107, 119, 147, 164-200
common-api/app/api/v1/endpoints/__init__.py                              0      0   100%
common-api/app/api/v1/endpoints/auth.py                                 41      4    90%   42, 46, 48, 91
common-api/app/api/v1/endpoints/campaign.py                             36     17    53%   25-26, 40-43, 50, 57-60, 65-70
common-api/app/api/v1/endpoints/facebook_comment.py                     48     27    44%   37-41, 56-67, 74-97, 104-111, 118-127
common-api/app/api/v1/endpoints/facebook_inbox.py                       43     22    49%   37-39, 55-63, 71-89, 99-106, 115-122
common-api/app/api/v1/endpoints/facebook_post.py                        79     55    30%   37-39, 53-56, 63-86, 93-164, 171-176
common-api/app/api/v1/endpoints/facebook_profile.py                     44     24    45%   33-34, 48-55, 62-72, 82-103, 110-119
common-api/app/api/v1/endpoints/notifications.py                        23     14    39%   16-29, 41-52
common-api/app/api/v1/endpoints/users.py                                40     13    68%   39-46, 80, 93-99, 111-117
common-api/app/api/v1/endpoints/webhooks.py                             64     43    33%   31-53, 63-102, 112-140
common-api/app/api/v1/router.py                                         12      0   100%
common-api/app/constants/auth.py                                         3      0   100%
common-api/app/constants/facebook_comment.py                             4      0   100%
common-api/app/constants/facebook_messenger.py                           3      0   100%
common-api/app/constants/facebook_post.py                                3      0   100%
common-api/app/constants/facebook_profile.py                             2      0   100%
common-api/app/constants/user.py                                         2      0   100%
common-api/app/core/config.py                                           46      2    96%   67, 71
common-api/app/core/security.py                                         27      9    67%   15, 31-34, 43-46
common-api/app/db/models/__init__.py                                    13      0   100%
common-api/app/db/models/base.py                                        24      9    62%   22-31
common-api/app/db/models/campaign.py                                    18      0   100%
common-api/app/db/models/campaigns_notifications.py                     16      0   100%
common-api/app/db/models/campaigns_products.py                          19      0   100%
common-api/app/db/models/facebook_comment.py                            19      0   100%
common-api/app/db/models/facebook_inbox.py                              18      0   100%
common-api/app/db/models/facebook_post.py                               21      0   100%
common-api/app/db/models/facebook_profile.py                            20      0   100%
common-api/app/db/models/orders.py                                      23      0   100%
common-api/app/db/models/orders_products.py                             17      0   100%
common-api/app/db/models/payments.py                                    24      0   100%
common-api/app/db/models/products.py                                    26      0   100%
common-api/app/db/models/profiles_contacts.py                           21      0   100%
common-api/app/db/models/user.py                                        11      0   100%
common-api/app/db/repositories/__init__.py                              11      0   100%
common-api/app/db/repositories/campaign.py                               4      0   100%
common-api/app/db/repositories/campaigns_notifications/__init__.py       0      0   100%
common-api/app/db/repositories/campaigns_notifications/repo.py           6      0   100%
common-api/app/db/repositories/campaigns_products/__init__.py            0      0   100%
common-api/app/db/repositories/campaigns_products/repo.py                6      0   100%
common-api/app/db/repositories/crud/__init__.py                          0      0   100%
common-api/app/db/repositories/crud/base.py                             44      1    98%   33
common-api/app/db/repositories/facebook_comment/__init__.py              1      0   100%
common-api/app/db/repositories/facebook_comment/create.py               22      3    86%   41-43
common-api/app/db/repositories/facebook_comment/query.py                 4      0   100%
common-api/app/db/repositories/facebook_comment/repo.py                 17      1    94%   24
common-api/app/db/repositories/facebook_comment/update.py                6      1    83%   8
common-api/app/db/repositories/facebook_inbox/__init__.py                3      0   100%
common-api/app/db/repositories/facebook_inbox/create.py                 17      8    53%   25-44
common-api/app/db/repositories/facebook_inbox/repo.py                   13      2    85%   14, 22
common-api/app/db/repositories/facebook_post/__init__.py                 1      0   100%
common-api/app/db/repositories/facebook_post/create.py                  21      1    95%   37
common-api/app/db/repositories/facebook_post/query.py                    4      0   100%
common-api/app/db/repositories/facebook_post/repo.py                    17      1    94%   22
common-api/app/db/repositories/facebook_post/update.py                   6      1    83%   8
common-api/app/db/repositories/facebook_profile/__init__.py              1      0   100%
common-api/app/db/repositories/facebook_profile/create.py                9      0   100%
common-api/app/db/repositories/facebook_profile/query.py                 4      0   100%
common-api/app/db/repositories/facebook_profile/repo.py                 17      1    94%   17
common-api/app/db/repositories/facebook_profile/update.py                6      1    83%   8
common-api/app/db/repositories/orders/__init__.py                        0      0   100%
common-api/app/db/repositories/orders/repo.py                            6      0   100%
common-api/app/db/repositories/orders_products/__init__.py               0      0   100%
common-api/app/db/repositories/orders_products/repo.py                   6      0   100%
common-api/app/db/repositories/payments/__init__.py                      0      0   100%
common-api/app/db/repositories/payments/repo.py                          6      0   100%
common-api/app/db/repositories/products/__init__.py                      0      0   100%
common-api/app/db/repositories/products/repo.py                          6      0   100%
common-api/app/db/repositories/profiles_contacts/__init__.py             0      0   100%
common-api/app/db/repositories/profiles_contacts/repo.py                 6      0   100%
common-api/app/db/repositories/user/__init__.py                          2      0   100%
common-api/app/db/repositories/user/user_auth.py                        11      1    91%   14
common-api/app/db/repositories/user/user_create.py                      10      0   100%
common-api/app/db/repositories/user/user_query.py                        4      0   100%
common-api/app/db/repositories/user/user_repo.py                        18      0   100%
common-api/app/db/repositories/user/user_update.py                      11      4    64%   7, 11-13
common-api/app/db/session.py                                            11      4    64%   20-24
common-api/app/main.py                                                  45     19    58%   27-39, 75-79, 83-85
common-api/app/schemas/__init__.py                                       6      0   100%
common-api/app/schemas/campaign.py                                      24      0   100%
common-api/app/schemas/campaigns_notifications.py                       25      0   100%
common-api/app/schemas/campaigns_products.py                            28      0   100%
common-api/app/schemas/common.py                                        20      0   100%
common-api/app/schemas/facebook_comment.py                              30      0   100%
common-api/app/schemas/facebook_messenger.py                            27      0   100%
common-api/app/schemas/facebook_post.py                                 35      0   100%
common-api/app/schemas/facebook_profile.py                              25      0   100%
common-api/app/schemas/orders.py                                        32      0   100%
common-api/app/schemas/orders_products.py                               24      0   100%
common-api/app/schemas/payments.py                                      36      0   100%
common-api/app/schemas/products.py                                      48      0   100%
common-api/app/schemas/profiles_contacts.py                             36      0   100%
common-api/app/schemas/user.py                                          26      0   100%
common-api/app/services/__init__.py                                      0      0   100%
common-api/app/services/facebook_scheduler.py                           36     26    28%   21-53, 57-80
common-api/app/services/socketio_server.py                              72     53    26%   21-53, 58-62, 68-69, 74-84, 91-106
common-api/app/services/webhook_cache_service.py                        24     14    42%   17-18, 25-41
common-api/app/utils/redis.py                                          108     25    77%   48-50, 55, 58-60, 105, 118-120, 143-149, 168, 181-183, 211-213, 242-244
--------------------------------------------------------------------------------------------------
TOTAL                                                                 1983    437    78%
Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml
FAIL Required test coverage of 80% not reached. Total coverage: 77.96%
=========================== short test summary info ============================
FAILED common-api/tests/unit/test_campaigns_notifications.py::test_get_campaign_notification
FAILED common-api/tests/unit/test_campaigns_products.py::test_get_campaign_product
FAILED common-api/tests/unit/test_facebook_inbox.py::test_create_facebook_inbox
FAILED common-api/tests/unit/test_facebook_inbox.py::test_create_multiple_facebook_inboxes
FAILED common-api/tests/unit/test_facebook_inbox.py::test_create_facebook_inbox_with_same_messenger_id
FAILED common-api/tests/unit/test_facebook_inbox.py::test_get_facebook_inbox_by_id
FAILED common-api/tests/unit/test_facebook_inbox.py::test_pagination_builder_with_facebook_inbox
FAILED common-api/tests/unit/test_facebook_inbox.py::test_pagination_builder_with_facebook_inbox_filtered
FAILED common-api/tests/unit/test_facebook_inbox.py::test_update_facebook_inbox
FAILED common-api/tests/unit/test_facebook_inbox.py::test_unique_facebook_inbox
FAILED common-api/tests/unit/test_facebook_inbox.py::test_create_facebook_inbox_repo
FAILED common-api/tests/unit/test_facebook_inbox.py::test_get_by_messenger_id
FAILED common-api/tests/unit/test_facebook_inbox.py::test_update_facebook_inbox_repo
FAILED common-api/tests/unit/test_orders.py::test_get_order - assert None is ...
FAILED common-api/tests/unit/test_orders_products.py::test_get_order_product
FAILED common-api/tests/unit/test_payments.py::test_get_payment - assert None...
FAILED common-api/tests/unit/test_products.py::test_get_product - assert None...
======================== 17 failed, 86 passed in 5.25s =========================
